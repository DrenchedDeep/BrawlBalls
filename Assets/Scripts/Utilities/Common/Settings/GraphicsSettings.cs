using System.Linq;
using UnityEngine;
using UnityEngine.UI;

namespace Utilities.Common.Settings
{
    // GENERATED BY CHAT GPT, Verify and test before continuing!
    public class GraphicsSettings : MonoBehaviour, ISettingsMenu
    {
        [SerializeField] private Dropdown qualityDropdown;
        [SerializeField] private Dropdown resolutionDropdown;
        [SerializeField] private Toggle fullscreenToggle;
        [SerializeField] private Toggle vSyncToggle;

        private Resolution[] resolutions;

        private void Awake()
        {
            #if UNITY_STANDALONE || UNITY_EDITOR
                InitializeResolutionDropdown();
                InitializeQualityDropdown();
                fullscreenToggle.gameObject.SetActive(true);
                vSyncToggle.gameObject.SetActive(true);
            #endif

            #if UNITY_ANDROID || UNITY_IOS
                // Mobile doesn't have resolution and quality settings in the same way
                fullscreenToggle.gameObject.SetActive(false);
                vSyncToggle.gameObject.SetActive(false);
            #endif

            #if UNITY_PS4 || UNITY_XBOX
                // Console-specific behavior, might not have direct resolution control
                fullscreenToggle.gameObject.SetActive(false);
                vSyncToggle.gameObject.SetActive(false);
                InitializeQualityDropdown(); // Console platforms may handle quality settings differently
            #endif

            Load();

            fullscreenToggle.onValueChanged.AddListener(SetFullscreen);
            vSyncToggle.onValueChanged.AddListener(SetVSync);
            qualityDropdown.onValueChanged.AddListener(SetQuality);
            resolutionDropdown.onValueChanged.AddListener(SetResolution);
        }

        private void InitializeQualityDropdown()
        {
            qualityDropdown.ClearOptions();
            string[] qualityNames = QualitySettings.names;
            qualityDropdown.AddOptions(qualityNames.ToList());
        }

        private void InitializeResolutionDropdown()
        {
            resolutions = Screen.resolutions.Distinct().ToArray();
            resolutionDropdown.ClearOptions();

            var options = resolutions.Select(res => $"{res.width}x{res.height} @{res.refreshRate}Hz").ToList();
            resolutionDropdown.AddOptions(options);
        }

        public void SetQuality(int index)
        {
            QualitySettings.SetQualityLevel(index);
        }

        public void SetResolution(int index)
        {
            #if UNITY_STANDALONE || UNITY_EDITOR
                Resolution resolution = resolutions[index];
                Screen.SetResolution(resolution.width, resolution.height, Screen.fullScreen, resolution.refreshRate);
            #endif
        }

        public void SetFullscreen(bool isFullscreen)
        {
            #if UNITY_STANDALONE || UNITY_EDITOR
                Screen.fullScreen = isFullscreen;
            #endif
        }

        public void SetVSync(bool isEnabled)
        {
            #if UNITY_STANDALONE || UNITY_EDITOR
                QualitySettings.vSyncCount = isEnabled ? 1 : 0;
            #endif
        }

        public void Save()
        {
            #if UNITY_STANDALONE || UNITY_EDITOR
                PlayerPrefs.SetInt("Graphics_Quality", qualityDropdown.value);
                PlayerPrefs.SetInt("Graphics_Resolution", resolutionDropdown.value);
                PlayerPrefs.SetInt("Graphics_Fullscreen", fullscreenToggle.isOn ? 1 : 0);
                PlayerPrefs.SetInt("Graphics_VSync", vSyncToggle.isOn ? 1 : 0);
            #endif
            PlayerPrefs.Save();
        }

        public void Load()
        {
            #if UNITY_STANDALONE || UNITY_EDITOR
                qualityDropdown.value = PlayerPrefs.GetInt("Graphics_Quality", QualitySettings.GetQualityLevel());
                resolutionDropdown.value = PlayerPrefs.GetInt("Graphics_Resolution", resolutions.Length - 1);
                fullscreenToggle.isOn = PlayerPrefs.GetInt("Graphics_Fullscreen", Screen.fullScreen ? 1 : 0) == 1;
                vSyncToggle.isOn = PlayerPrefs.GetInt("Graphics_VSync", QualitySettings.vSyncCount) == 1;
            #endif

            #if UNITY_ANDROID || UNITY_IOS
                // For mobile, you might want to load other settings or skip
            #endif
        }
    }
}
